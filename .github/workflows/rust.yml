name: Rust Tests and MSRV

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Parse MSRV from manifest
      id: msrv
      run: |
        MSRV=$(grep -oP 'rust-version\s*=\s*"\K[0-9.]+(?=")' Cargo.toml)
        echo "MSRV version: $MSRV"
        echo "msrv=$MSRV" >> $GITHUB_OUTPUT

    - name: Set up Rust toolchain for MSRV
      run: |
        rustup install ${{ steps.msrv.outputs.msrv }}
        rustup override set ${{ steps.msrv.outputs.msrv }}
        rustup component add rustfmt

    - name: Check all targets with MSRV
      run: cargo check --all-targets && cargo check --release --all-targets
      
    - name: Run tests with MSRV
      run: cargo test --verbose --no-fail-fast
      
    - name: Switch to stable and run Clippy
      if: always()
      run: |
        rustup override unset
        rustup component add clippy rustfmt
        cargo clippy --verbose -- -D warnings

    - name: Check cargo docs
      if: always()
      run: |
        export RUSTDOCFLAGS="-D warnings"
        cargo doc --no-deps --document-private-items --verbose

    - name: Check formatting
      if: always()
      run: |
        cargo fmt --all -- --check

    - name: Run cargo audit
      if: always()
      run: |
        cargo install cargo-audit
        cargo audit --deny=warnings
        
    - name: Run cargo deny
      if: always()
      run: |
        cargo install cargo-deny
        cargo deny check --deny=warnings